name: Release with Changesets

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      published: ${{ steps.changesets.outputs.published }}
      version: ${{ steps.extract-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install changesets
        run: npm install @changesets/cli

      - name: Update Swift version helper
        run: |
          cat > update-swift-version.js << 'EOF'
          const fs = require('fs');
          const path = require('path');
          
          const args = process.argv.slice(2);
          if (args.length !== 1) {
            console.error('Usage: node update-swift-version.js <version>');
            process.exit(1);
          }
          
          const newVersion = args[0];
          const swiftFile = 'Sources/CalvergeCLI.swift';
          
          try {
            let content = fs.readFileSync(swiftFile, 'utf8');
            content = content.replace(/version: "[^"]*"/, `version: "${newVersion}"`);
            fs.writeFileSync(swiftFile, content);
            console.log(`Updated Swift version to ${newVersion}`);
          } catch (error) {
            console.error('Error updating Swift version:', error);
            process.exit(1);
          }
          EOF

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This will create a PR if there are changesets, or publish if the PR was merged
          version: npx changeset version
          publish: echo "No npm publish needed - we handle binary releases separately"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Swift version if release was published
        if: steps.changesets.outputs.published == 'true'
        run: |
          # Extract version from package.json since it was just updated
          VERSION=$(node -p "require('./package.json').version")
          echo "Updating Swift version to $VERSION"
          node update-swift-version.js "$VERSION"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Sources/CalvergeCLI.swift
          git commit -m "chore: update Swift version to $VERSION"
          git push

      - name: Extract version from published packages
        id: extract-version
        if: steps.changesets.outputs.published == 'true'
        run: |
          # If packages were published, extract version from the published info
          echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[0].version' > version.txt
          VERSION=$(cat version.txt)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Published version: $VERSION"

      - name: Create Git Tag
        if: steps.changesets.outputs.published == 'true'
        run: |
          VERSION=${{ steps.extract-version.outputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v$VERSION"
          git push origin "v$VERSION"

  build-release:
    runs-on: macos-latest
    needs: [release]
    if: |
      always() && 
      (startsWith(github.ref, 'refs/tags/v') || 
       (needs.release.result == 'success' && needs.release.outputs.published == 'true'))
    outputs:
      version: ${{ steps.version.outputs.VERSION }}
      checksum: ${{ steps.checksum.outputs.CHECKSUM }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ startsWith(github.ref, 'refs/tags/v') && github.ref || format('refs/tags/v{0}', needs.release.outputs.version) }}

      - name: Set up Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: "5.9"

      - name: Get version
        id: version
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # Triggered by tag push
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            # Triggered after release job
            echo "VERSION=${{ needs.release.outputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and sign executable
        run: |
          # Build release binary
          swift build -c release

          # Sign the executable (ad-hoc signing)
          codesign --force --sign - --entitlements calverge.entitlements .build/release/calverge

      - name: Create archive
        run: |
          mkdir -p release
          cp .build/release/calverge release/
          tar -czf calverge-${{ steps.version.outputs.VERSION }}-macos.tar.gz -C release .

      - name: Calculate checksum
        id: checksum
        run: |
          CHECKSUM=$(shasum -a 256 calverge-${{ steps.version.outputs.VERSION }}-macos.tar.gz | cut -d ' ' -f 1)
          echo "CHECKSUM=$CHECKSUM" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            calverge-${{ steps.version.outputs.VERSION }}-macos.tar.gz
          body: |
            ## Changes

            See the [changelog](CHANGELOG.md) for details.

            ## Installation

            ### Homebrew (Recommended)
            ```bash
            brew install lgastler/tap/calverge
            ```

            ### Manual Installation
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/v${{ steps.version.outputs.VERSION }}/calverge-${{ steps.version.outputs.VERSION }}-macos.tar.gz | tar xz
            sudo mv calverge /usr/local/bin/
            ```

            **SHA256 Checksum:** `${{ steps.checksum.outputs.CHECKSUM }}`
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-homebrew:
    runs-on: ubuntu-latest
    needs: [build-release]
    if: success() && (startsWith(github.ref, 'refs/tags/v') || needs.build-release.result == 'success')
    steps:
      - name: Update Homebrew formula
        uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: calverge
          formula-path: Formula/calverge.rb
          homebrew-tap: lgastler/homebrew-tap
          download-url: https://github.com/${{ github.repository }}/releases/download/v${{ needs.build-release.outputs.version }}/calverge-${{ needs.build-release.outputs.version }}-macos.tar.gz
          commit-message: |
            {{formulaName}} {{version}}

            Created by https://github.com/mislav/bump-homebrew-formula-action
        env:
          COMMITTER_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
